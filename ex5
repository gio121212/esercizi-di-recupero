import numpy as np

def dot_product(list1, list2):
    if len(list1) == len(list2):
        prod = 0.
        for i in range(len(list1)):
            prod += list1[i] * list2[i]
        print(prod)
    else:
        raise ValueError("prodotto scalare non definito per vettori con diverso numero di componenti")



def multiply_matrix(matrix1, matrix2):
    result = [[]] * len(matrix1)
    for i in range(len(matrix1)):
        result[i] = [0] * len(matrix1)
    try:
        for i in range(len(matrix1)):
            for j in range(len(matrix2[0])):
                for k in range(len(matrix2)):
                    result[i][j] += matrix1[i][k] * matrix2[k][j]
    except IndexError:
        print("Errore: matrici non moltiplicabili")
        return None
    for r in result:
        print(r)







# testo la funzione multiply_matrix con matrici non moltiplicabili

multiply_matrix([[0,0],[1,0], [1,1]],[[1,1,1],[1, 1, 3],[3, 1,1]])
multiply_matrix(np.eye(20), np.ones((20, 30)))

# testo la funzione multiply_matrix con matrici moltiplicabili

multiply_matrix(np.eye(20), np.ones((20, 20)))
multiply_matrix([[complex(0,0), complex(0,-1)],[complex(0,1), complex(0,0)]],[[complex(0,0), complex(0,-1)],[complex(0,1), complex(0,0)]])

# testo la funzione dot_product con vettori moltiplicabili

dot_product([0,0,0,0,0], [12,3245,1234,776,23])
dot_product([1],[2])

# testo la funzione dot_product con vettori non moltiplicabili

dot_product([1, 0, 1], [1,2])
dot_product([3,7,1,2],[])
